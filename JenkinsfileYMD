node('master') {
  // env.JAVA_HOME = tool 'jdk8'

  env.PATH = "${env.JENKINS_HOME}/bin:${env.PATH}"
  checkout scm

  stage('Get Ansible Roles') {
    sh('#!/bin/sh -e\n' + 'rm -rf ansible/roles')
    sh('#!/bin/sh -e\n' + 'ansible-galaxy install -r ansible/requirements.yml -p ansible/roles/ -f')
  }
  stage('Test build in image') {
    sh('apt-get update && apt-get upgrade')
  }
//  stage('Build VoterListRegistry Service') {
//    sh('#!/bin/sh -e\n' + "ansible-playbook -i 'localhost,' -c local --vault-password-file=${env.DEPLOY_KEY} ansible/playbook.yml --extra-vars 'target_hosts=all java_home=${env.JAVA_HOME} deploy_env=${env.DEPLOY_ENV} package_revision=${env.BUILD_NUMBER} gather_facts=yes' -t build")
//  }
//  stage('Provision VoterListRegistry Service') {
//    sh('#!/bin/sh -e\n' + "ansible-playbook -i 'localhost,' -c local --vault-password-file=${env.DEPLOY_KEY} ansible/playbook.yml --extra-vars 'target_hosts=all java_home=${env.JAVA_HOME} deploy_env=${env.DEPLOY_ENV} package_revision=${env.BUILD_NUMBER} workspace=${env.WORKSPACE} bintray_api_key=${env.BINTRAY_API_KEY} gather_facts=yes' -t provision")
//  }

//  stage('Archive RPM artifact') {
//    dir('build/libs') {
//      archiveArtifacts artifacts: 'VoterListRegistry*.rpm'
//      archiveArtifacts artifacts: 'voterlistregistry*.deb'
//    }
//  } 
}

